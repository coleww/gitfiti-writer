(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports={
  "a": [
  [0,0,1,0,0],
  [0,0,2,0,0],
  [0,1,0,1,0],
  [0,2,2,2,0],
  [0,1,0,1,0],
  [0,1,0,1,0],
  [2,0,0,0,2]],
  "b": [
  [2,1,2,2,1],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,1]],
  "c": [
  [1,2,2,2,2],
  [2,0,0,0,1],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,1],
  [1,2,2,2,2]],
  "d": [
  [2,2,2,2,1],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,1]],
  "e": [
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2]],
  "f": [
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0]],
  "g": [

 [2,2,2,2,2],
  [2,0,0,0,1],
  [2,0,0,0,0],
  [2,0,0,2,1],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2]],

  "h": [
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2]],

  "i": [
  [2,2,2,2,2],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [2,2,2,2,2]],

  "j": [
  [2,2,2,2,2],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [2,0,2,0,0],
  [2,0,2,0,0],
  [2,2,2,0,0]],

  "k": [
  [2,0,0,0,2],
  [2,0,0,2,0],
  [2,0,2,0,0],
  [2,2,0,0,0],
  [2,0,2,0,0],
  [2,0,0,2,0],
  [2,0,0,0,2]],

  "l": [
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2]],

  "m": [
  [1,0,0,0,1],
  [2,0,0,0,2],
  [2,2,0,2,2],
  [2,0,2,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2]],

  "n": [
  [1,0,0,0,2],
  [2,0,0,0,2],
  [2,2,0,0,2],
  [2,0,2,0,2],
  [2,0,0,2,2],
  [2,0,0,0,2],
  [2,0,0,0,1]],

  "o": [
  [2,2,2,2,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2]],

  "p": [
  [2,2,2,2,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,0,0,0,0]],

  "q": [
  [2,2,2,2,0],
  [2,0,0,2,0],
  [2,0,0,2,0],
  [2,0,0,2,0],
  [2,0,1,2,0],
  [2,2,2,2,0],
  [0,0,0,0,2]],

  "r": [
  [2,2,2,1,0],
  [2,0,0,2,0],
  [2,0,0,2,0],
  [2,2,2,1,0],
  [2,0,2,0,0],
  [2,0,0,2,0],
  [2,0,0,0,2]],

  "s": [
  [2,2,2,2,2],
  [2,0,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2],
  [0,0,0,0,2],
  [0,0,0,0,2],
  [2,2,2,2,2]],

  "t": [
  [2,2,2,2,2],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0]],

  "u": [
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,0,0,0,2],
  [2,2,2,2,2]],

  "v": [
  [1,0,0,0,1],
  [2,0,0,0,2],
  [0,1,0,1,0],
  [0,2,0,2,0],
  [0,1,0,1,0],
  [0,0,2,0,0],
  [0,0,1,0,0]],

  "w": [
  [1,0,1,0,1],
  [2,0,2,0,2],
  [1,0,1,0,1],
  [0,1,0,1,0],
  [0,2,0,2,0],
  [0,2,0,2,0],
  [0,1,0,1,0]],

  "h": [
  [0,0,0,0,0],
  [2,0,0,0,2],
  [0,2,0,2,0],
  [0,0,2,0,0],
  [0,2,0,2,0],
  [2,0,0,0,2],
  [0,0,0,0,0]],

  "y": [
  [1,0,0,0,1],
  [2,0,0,0,2],
  [0,2,0,2,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0],
  [0,0,2,0,0]],

  "z": [
  [2,2,2,2,2],
  [0,0,0,0,2],
  [0,0,0,2,0],
  [0,0,2,0,0],
  [0,2,0,0,0],
  [2,0,0,0,0],
  [2,2,2,2,2]],

  ".": [
  [0,0,0],
  [0,0,0],
  [0,0,0],
  [0,0,0],
  [0,0,0],
  [2,2,0],
  [2,2,0]],

  ",": [
  [0,0,0,0],
  [0,0,0,0],
  [0,0,0,0],
  [0,0,0,0],
  [0,2,2,0],
  [0,2,2,0],
  [2,0,0,0]],

  ":": [
  [0,0,0,0],
  [0,2,2,0],
  [0,2,2,0],
  [0,0,0,0],
  [0,2,2,0],
  [0,2,2,0],
  [0,0,0,0]],

  ";": [
  [0,0,0,0],
  [0,2,2,0],
  [0,2,2,0],
  [0,0,0,0],
  [0,2,2,0],
  [0,2,2,0],
  [2,0,0,0]],

  "!": [
  [0,2,0],
  [0,2,0],
  [0,2,0],
  [0,2,0],
  [0,2,0],
  [0,0,0],
  [0,2,0]],

  "?": [
  [2,2,2,2,2],
  [2,0,0,0,2],
  [0,0,0,0,2],
  [0,0,2,2,2],
  [0,0,2,0,0],
  [0,0,0,0,0],
  [0,0,2,0,0]],

  "\"": [
  [0,2,0,2,0],
  [0,2,0,2,0],
  [0,2,0,2,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0],
  [0,0,0,0,0]],

  "'": [
  [0,2,0],
  [0,2,0],
  [0,2,0],
  [0,0,0],
  [0,0,0],
  [0,0,0],
  [0,0,0]],
  "\\": [
  [0,0,0,0,0],
  [2,0,0,0,0],
  [0,2,0,0,0],
  [0,0,2,0,0],
  [0,0,0,2,0],
  [0,0,0,0,2],
  [0,0,0,0,0]],

  "\/": [
  [0,0,0,0,0],
  [0,0,0,0,2],
  [0,0,0,2,0],
  [0,0,2,0,0],
  [0,2,0,0,0],
  [2,0,0,0,0],
  [0,0,0,0,0]]
}
},{}],2:[function(require,module,exports){
var alphabet = require('./alphabet')

module.exports = function (str) {
  var gitfiti = [[],[],[],[],[],[],[]]
  str.split(" ").forEach(function (word) {
    word.split("").forEach(function (charmander) {
      var rows = alphabet[charmander]
      if (rows) for (var i = 0; i < 7;  gitfiti[i].push(rows[i]) && gitfiti[i++].push([0])) {}
    })
    for (var i = 0; i < 7;  gitfiti[i++].push([0, 0, 0])) {}
  })

  return gitfiti.map(function (row) {
    return row.reduce(function (a, b) {return a.concat(b)})
  })
}


},{"./alphabet":1}],3:[function(require,module,exports){
var gitfitiWriter = require('../')

document.getElementById('input').addEventListener('keyup', function (e) {
  document.getElementById('output').textContent = '[[' + gitfitiWriter(document.getElementById('input').value).join('],\n[') + ']]'
})

},{"../":2}]},{},[3]);
